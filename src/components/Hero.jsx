import React, { useEffect, useState } from 'react';
import Card from './Card';
import style from './style/hero.module.css';

const Hero = () => {
  const [details, setdetails] = useState(null);
  const [slide, setSlide] = useState(0);

  useEffect(() => {
    requestData();
  }, []);

  const requestData = async () => {
    const fetchResponse = await fetch('https://api.met.no/weatherapi/locationforecast/2.0/compact?lat=6.921442&lon=122.079025').then((res) => res.json());
    setdetails(fetchResponse.properties.timeseries);
  };
  return (
    <div className={style.container}>
      <button
        className={` ${style.home}`}
        onClick={() => {
          setSlide(0);
        }}
      >
        <svg width='30' height='25' viewBox='0 0 25 20' fill='none' xmlns='http://www.w3.org/2000/svg'>
          <path
            d='M12.1688 5.04375L4.16667 11.6345V18.7477C4.16667 18.9319 4.23983 19.1086 4.37007 19.2388C4.5003 19.369 4.67693 19.4422 4.86111 19.4422L9.72483 19.4296C9.9084 19.4287 10.0841 19.3551 10.2136 19.225C10.3431 19.0948 10.4158 18.9187 10.4158 18.7352V14.5811C10.4158 14.3969 10.489 14.2203 10.6192 14.09C10.7494 13.9598 10.9261 13.8866 11.1102 13.8866H13.888C14.0722 13.8866 14.2488 13.9598 14.3791 14.09C14.5093 14.2203 14.5825 14.3969 14.5825 14.5811V18.7321C14.5822 18.8235 14.5999 18.914 14.6347 18.9985C14.6695 19.083 14.7206 19.1599 14.7851 19.2246C14.8496 19.2893 14.9263 19.3406 15.0107 19.3757C15.0951 19.4107 15.1855 19.4287 15.2769 19.4287L20.1389 19.4422C20.3231 19.4422 20.4997 19.369 20.6299 19.2388C20.7602 19.1086 20.8333 18.9319 20.8333 18.7477V11.6297L12.8329 5.04375C12.7388 4.96793 12.6217 4.92659 12.5009 4.92659C12.3801 4.92659 12.2629 4.96793 12.1688 5.04375ZM24.809 9.52335L21.1806 6.53246V0.520745C21.1806 0.382611 21.1257 0.250135 21.028 0.15246C20.9303 0.0547848 20.7979 -8.86917e-05 20.6597 -8.86917e-05H18.2292C18.091 -8.86917e-05 17.9586 0.0547848 17.8609 0.15246C17.7632 0.250135 17.7083 0.382611 17.7083 0.520745V3.67222L13.8225 0.475172C13.4496 0.168305 12.9816 0.000524739 12.4987 0.000524739C12.0158 0.000524739 11.5478 0.168305 11.1749 0.475172L0.188369 9.52335C0.135629 9.56694 0.0919949 9.62049 0.0599602 9.68095C0.0279255 9.74142 0.00811768 9.8076 0.00166864 9.87571C-0.00478041 9.94383 0.00225566 10.0126 0.0223748 10.078C0.042494 10.1433 0.0753019 10.2041 0.118924 10.2569L1.22569 11.6023C1.2692 11.6552 1.32271 11.699 1.38316 11.7312C1.44361 11.7634 1.50982 11.7834 1.57799 11.7899C1.64616 11.7965 1.71496 11.7896 1.78045 11.7695C1.84594 11.7495 1.90683 11.7167 1.95964 11.6731L12.1688 3.26423C12.2629 3.18842 12.3801 3.14708 12.5009 3.14708C12.6217 3.14708 12.7388 3.18842 12.8329 3.26423L23.0425 11.6731C23.0953 11.7167 23.156 11.7495 23.2214 11.7696C23.2868 11.7898 23.3556 11.7968 23.4237 11.7903C23.4918 11.7839 23.558 11.7641 23.6184 11.7321C23.6789 11.7 23.7325 11.6564 23.776 11.6036L24.8828 10.2582C24.9264 10.2051 24.9591 10.144 24.9789 10.0783C24.9988 10.0127 25.0055 9.9437 24.9987 9.87541C24.9918 9.80713 24.9715 9.74088 24.939 9.68046C24.9064 9.62004 24.8623 9.56664 24.809 9.52335Z'
            fill='white'
          />
        </svg>
      </button>
      <button
        className={style.button}
        onClick={() => {
          setSlide(slide === details.length - 1 ? 0 : slide + 1);
        }}
      >
        Next
      </button>
      <main className={style.detailCards}>
        {details ? (
          details.map((element, index) => {
            if (index === slide) {
              return <Card data={element.data} time={element.time} key={index} />;
            }
          })
        ) : (
          <p>Loading...</p>
        )}
      </main>
      <button
        className={style.button}
        onClick={() => {
          setSlide(slide === 0 ? details.length - 1 : slide - 1);
        }}
      >
        Prev
      </button>
      <p>{details ? `${slide + 1}/${details.length}` : 'loading...'}</p>
    </div>
  );
};

export default Hero;
